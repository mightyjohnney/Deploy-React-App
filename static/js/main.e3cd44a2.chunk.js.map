{"version":3,"sources":["components/Vercel.jsx","components/Netlify.jsx","components/GitHubPages.jsx","components/GitLabPages.jsx","components/Heroku.jsx","components/Surge.jsx","components/Render.jsx","components/Roast.jsx","components/Firebase.jsx","components/MoovwebXDN.jsx","components/Extra.jsx","App.js","reportWebVitals.js","index.js"],"names":["Vercel","id","href","target","rel","src","alt","width","height","sizes","className","style","margin","clear","color","textDecoration","Netlify","GitHubPages","GitLabPages","Heroku","Surge","Render","service","details","in","routing","Roast","Firebase","MoovwebXDN","Extra","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3cd44a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Vercel = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 id=\"vercelhttpsvercelcom\">10. Vercel</h2>\r\n                <p><a href=\"https://vercel.com/docs\" target=\"_blank\" rel=\"noopener noreferrer\">Vercel</a>, formerly\r\n                    known as\r\n                    ZEIT, is a revolutionary serverless deployment service designed for React, Angular, Vue, etc.\r\n                    You can\r\n                    easily import projects from GitLab or Bitbucket with Vercel. Automatic SSL is one of the many\r\n                    cool\r\n                    features it offers.</p>\r\n                <p>To deploy Vercel, <a href=\"https://vercel.com/signup\" target=\"_blank\" rel=\"noopener noreferrer\">create a\r\n                    new account</a>. You can quickly login using OAuth.</p>\r\n                <p><img src=\"./docs/Vercel-login-1.png\" alt=\"Vercel Login\" width={720} height={307} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>After a successful login, the dashboard screen will appear. You can use either this dashboard or\r\n                    Vercel\r\n                    CLI and deploy it from the terminal. We’ll discuss both methods in more detail.</p>\r\n                <h3 id=\"dashboard\">Dashboard</h3>\r\n                <p>To deploy using the Vercel dashboard, integrate GitHub, GitLab, or Bitbucket, wherever your React\r\n                    application is stored. Click “Import Project” on your panel.</p>\r\n                <p><img src=\"./docs/vercel-dashboard-1.png\" alt=\"Vercel Dashboard\" width={720} height={303} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>You can opt either to import the project from the Git repository or use a template, which is\r\n                    another\r\n                    excellent feature of Vercel.</p>\r\n                <div className=\"code-block code-block-28\" style={{ margin: '8px 0', clear: 'both' }}>\r\n                    <a id=\"blog-personalized-demo-link\" href=\"#\">\r\n                        <div className=\"inline-demo\">\r\n                            <h2 style={{ color: '#ffffff' }}>We made a custom demo for <span id=\"personalized-company-account-name\" />.<br />No really. <span style={{ textDecoration: 'underline' }}>Click here to check it out</span>.</h2>\r\n                            <img id=\"blog-personalized-demo-thumbnail\" src=\"./docs/vercel-import-project-1.png\" width={720} height={291} alt=\"Import Project in Vercel\" />\r\n                            <button className=\"personalize-button\">Click here to see the full demo with network\r\n                                requests</button>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <p>Click “Continue” under “From Git Repository.”</p>\r\n                <p><img src=\"./docs/vercel-import-project-1.png\" width={720} height={291} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>You may have integrated GitHub, GitLab, or Bitbucket; for the purpose of this tutorial,\r\n                    we’ll\r\n                    assume you used GitHub. At any rate, you’ll have the option to import projects from\r\n                    GitHub, GitLab,\r\n                    or Bitbucket.</p>\r\n                <p>Click “Import Project from GitHub.” If this is your first time using Vercel,\r\n                    you’ll see\r\n                    a screen like this.</p>\r\n                <p><img src=\"./docs/vercel-import-project-from-github-1.png\" alt=\"Import Project From GitHub\" width={720} height={384} sizes=\"(max-width: 720px) 100vw, 720px\" />Click\r\n                    “Install Now For\r\n                    GitHub.”\r\n                    You’ll be prompted to install Vercel for GitHub. Save the setting for GitHub, navigate\r\n                    back to the\r\n                    <a href=\"https://vercel.com/import/git\">import Git page</a>, and you’ll see that your\r\n                    GitHub is now\r\n                    connected. Click “Import Project from GitHub.”\r\n                </p>\r\n                <p><img src=\"./docs/vercel-import-project-from-github-repo-1.png\" alt=\"Import Project From GitHub\" width={720} height={337} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>You’ll be prompted to choose which project you want to deploy. Choose the React project and\r\n                    click\r\n                    “Import.” Next, you’ll be prompted to write a project name. Leave it as the\r\n                    default and\r\n                    click “Continue.” When asked for the root directory, choose accordingly and click\r\n                    “Continue.”</p>\r\n                <p>This step is important. If you’ve initialized your React project using\r\n                    <code>create-react-app</code>, Vercel will autodetect it and choose a suitable configuration on\r\n                    its own.\r\n                    Leave the default configuration and click “Deploy.”\r\n                </p>\r\n                <p>If your React app was not initialized using <code>create-react-app</code>, you’l be asked\r\n                    for the\r\n                    configuration. Using the above configuration as an example, fill all the configuration fields\r\n                    and click\r\n                    “Deploy.”</p>\r\n                <p><img src=\"./docs/vercel-deploy-todo-app-1-e1596675551303.png\" width={375} height={492} /></p>\r\n                <p>Your React application will now be deployed within a matter of seconds with two to three preview\r\n                    links.\r\n                </p>\r\n                <h3 id=\"vercelcli\">Vercel CLI</h3>\r\n                <p>The first step is to install vercel globally.</p>\r\n                <pre>npm i -g vercel{\"\\n\"}{\"  \"}// or{\"\\n\"}{\"  \"}yarn global add vercel</pre>\r\n                <p>Once vercel is installed, run the following command.</p>\r\n                <pre>vercel login</pre>\r\n                <p>You’ll be prompted to enter the email with which you registered on Vercel. After submitting\r\n                    that,\r\n                    you’ll receive an email to verify your login.</p>\r\n                <p>Next, go to your project root directory and run the following command.</p>\r\n                <pre>vercel</pre>\r\n                <p>You’ll be prompted to answer a few questions. First, confirm that this is the project you\r\n                    want to\r\n                    deploy.</p>\r\n                <pre>? Set up and deploy “path to your project”? [Y/n] y</pre>\r\n                <p>Next, you’ll be asked in which account to deploy this app. It’ll give you a default\r\n                    option;\r\n                    just hit enter.</p>\r\n                <p>After this, you’ll be asked whether to link this to the existing project. Answer\r\n                    <code>N.</code>\r\n                </p>\r\n                <pre>? Which scope do you want to deploy to? Your Vercel Account{\"\\n\"}{\"  \"}? Link to existing project? [y/N] n</pre>\r\n                <p>The next step is to name your project and specify the path. Since we’re already in the\r\n                    project\r\n                    directory, it’ll be same as the default option, <code>./</code>.</p>\r\n                <pre>? What’s your project’s name? project-name{\"\\n\"}{\"  \"}? In which directory is your code located? ./</pre>\r\n                <p>It will autodetect whether your project was initialized using <code>create-react-app</code> and\r\n                    configure\r\n                    the settings accordingly. Otherwise, it will ask you to set them. Answer <code>No</code> if\r\n                    asked to\r\n                    override the settings.</p>\r\n                <pre>Auto-detected Project Settings (Create React App):{\"\\n\"}{\"  \"}- Build Command: `npm run build` or `react-scripts build`{\"\\n\"}{\"  \"}- Output Directory: build{\"\\n\"}{\"  \"}- Development Command: react-scripts start{\"\\n\"}{\"  \"}? Want to override the settings? [y/N] n{\"\\n\"}{\"  \"}</pre>\r\n                <p>Your project will be deployed.</p>\r\n                <pre>�{\"  \"}Deployed to production. Run `vercel --prod` to overwrite later (https://vercel.link/2F).{\"\\n\"}{\"  \"}</pre>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Vercel\r\n","import React from 'react'\r\n\r\nconst Netlify = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 id=\"netlifyhttpswwwnetlifycom\">1. Netlify</h2>\r\n                <p><a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Netlify</a> is one\r\n                    of the\r\n                    most popular services out there for web deployment. It easily imports projects from GitHub,\r\n                    GitLab, and\r\n                    Bitbucket and is widely used with <a href=\"#/why-you-should-be-using-jamstack/\" target=\"_blank\" rel=\"noopener noreferrer\">JAMstack</a>. One cool feature is that it creates a random\r\n                    name for every project, and the names are quite catchy.</p>\r\n                <p>To get started, create a <a href=\"#/why-you-should-be-using-jamstack/\" target=\"_blank\" rel=\"noopener noreferrer\">Netlify account</a>&nbsp;if you haven’t already.</p>\r\n                <p><img width={720} height={336} src=\"./docs/netlify-create-account-1.png\" alt=\"Create Netlify Account\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>Like Vercel, you can choose to deploy your app either through Netlify Dashboard or Netlify CLI.\r\n                </p>\r\n                <h3 id=\"netlifydragndrop\">Netlify drag-and-drop</h3>\r\n                <p>One of the coolest features that Netlify offers is the ability to drag and drop your site folder\r\n                    and\r\n                    deploy your app like magic.</p>\r\n                <p>For your React app, you’ll have to drag and drop the <code>build</code>&nbsp;folder on Netlify\r\n                    Dashboard. Run <code>npm run build</code> beforehand to deploy the latest build.</p>\r\n                <p><img src=\"./docs/netlify-drag-and-1-1.gif\" alt=\"Netlify Drag-and-Drop\" width={720} height={406} /></p>\r\n                <p>You can also connect GitHub, GitLab, or Bitbucket, depending on where your project is stored.</p>\r\n                <p><img width={720} height={314} src=\"./docs/netlify-create-new-site-1.png\" alt=\"Create New Site in Netlify\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>Choose the project repository that you need to deploy.</p>\r\n                <p><img src=\"./docs/netlify-project-repo-1.png\" alt=\"Netlify Project Repo\" width={720} height={550} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>Once you’ve selected the project, the final step is the configuration, which Netlify will\r\n                    autodetect if the project is initialized with <code>create-react-app</code>.</p>\r\n                <p><img width={720} height={717} src=\"./docs/netlify-configurations-1.png\" alt=\"Configurations in Netlify\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>Click “Deploy site” and your app will be deployed.</p>\r\n                <h3 id=\"netlifycli\">Netlify CLI</h3>\r\n                <p>If you prefer deploying apps through the terminal, here are the steps to do so with Netlify CLI.\r\n                </p>\r\n                <p>To deploy the latest build, run <code>npm run build</code> beforehand.</p>\r\n                <p>Next, install <code>netlify-cli</code> globally.</p>\r\n                <pre>npm install netlify-cli -g</pre>\r\n                <p>In your project root directory, run the following command.</p>\r\n                <pre>netlify deploy</pre>\r\n                <p>You might be prompted to grant access to Netlify CLI. Click “Authorize.”</p>\r\n                <p><img src=\"./docs/netlify-cli-authorize-app-1.png\" alt=\"Netlify CLI — Authorize App\" width={720} height={254} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>After successful authorization, you’ll see a successful login message in the terminal.</p>\r\n                <pre>You are now logged into your Netlify account!</pre>\r\n                <p>The following steps will guide you through the prompts that you’ll encounter in the\r\n                    terminal.</p>\r\n                <p>First, you’ll be asked to link this project to a site, since this is the first time\r\n                    you’re\r\n                    deploying this app. Select <code>Create configure a new site</code>.</p>\r\n                <pre>This folder isn't linked to a site yet{\"\\n\"}{\"  \"}? What would you like to do?</pre>\r\n                <blockquote>\r\n                    <pre>Link this directory to an existing site{\"\\n\"}{\"  \"}Create configure a new site</pre>\r\n                </blockquote>\r\n                <p>The next prompt is <code>Site name</code>. This is an optional field, as you can see below. If\r\n                    you\r\n                    already have a name in mind, type that and hit enter. If you leave this blank, Netlify will give\r\n                    this site\r\n                    a random name that you can change later.</p>\r\n                <pre>Choose a unique site name (e.g. netlify-thinks-lelouchB-is-great.netlify.app) or leave it blank for a random name. You can update the site name later.{\"\\n\"}{\"  \"}? Site name (optional):</pre>\r\n                <p>After this step, your site will be created and you’l be asked for a\r\n                    <code>Publish directory</code>.\r\n                    Type <code>build</code> here.\r\n                </p>\r\n                <pre>Please provide a publish directory{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}? Publish directory build</pre>\r\n                <p>With this, your site will be published and you will be provided a draft URL.</p>\r\n                <pre>Deploying to draft URL...{\"\\n\"}{\"  \"}✔ Finished hashing 19 files{\"\\n\"}{\"  \"}✔ CDN requesting 10 files{\"\\n\"}{\"  \"}✔ Finished uploading 10 assets{\"\\n\"}{\"  \"}✔ Draft deploy is live!{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}Logs:https://app.netlify.com/sites/serene-fermi-6d50a8/deploys/5f1194c3b903cadb238eabb4 {\"\\n\"}{\"  \"}Website Draft URL: https://5f1194c3b903cadb238eabb4--serene-fermi-6d50a8.netlify.app{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}If everything looks good on your draft URL, deploy it to your main site URL with the --prod flag.{\"\\n\"}{\"  \"}netlify deploy --prod</pre>\r\n                <p>Go to this draft URL. If everything checks out, you can deploy the website to the main site URL.\r\n                </p>\r\n                <p>Run the following command to deploy to production.</p>\r\n                <pre>netlify deploy --prod</pre>\r\n                <p>It will ask for the <code>Publish directory</code> one final time. Type <code>build</code> and\r\n                    hit enter.\r\n                    You’ll be provided with two URLs.</p>\r\n                <pre>Unique Deploy URL: https://5f11977085ef8fafe7535ff9--serene-fermi-6d50a8.netlify.app{\"\\n\"}{\"  \"}Website URL:{\"       \"}https://serene-fermi-6d50a8.netlify.app{\"\\n\"}{\"  \"}</pre>\r\n                <p>The difference between these two URLs is that <code>Unique Deploy URL</code> points to a specific\r\n                    version\r\n                    of your application. For example, if you make a change in your application and deploy again,\r\n                    you’ll\r\n                    get another <code>Unique Deploy URL</code> that is specific for that change. Your\r\n                    <code>Website URL</code>\r\n                    is the main URL, which corresponds to the latest version of your application.\r\n                </p>\r\n                <p>You might encounter a 404 error if your application uses a router, such as React Router.</p>\r\n                <p>In your <code>build</code> folder, create a new file called <code>_redirects</code> and add the\r\n                    following\r\n                    to it.</p>\r\n                <pre>/*{\"    \"}/index.html{\"  \"}200{\"\\n\"}{\"  \"}</pre>\r\n        <p>You’llneed to redeploy your application. This <a href=\"https://community.netlify.com/t/404-error-when-submitting-form/6554\" target=\"_blank\" rel=\"noopener noreferrer\">question posted to the Netlify community</a> might help.</p>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Netlify\r\n","import React from 'react'\r\n\r\nconst GitHubPages = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 id=\"githubpageshttpspagesgithubcom\">2. GitHub Pages</h2>\r\n                <p>GitHub Pages is one of the fastest and most widely used methods for beginners to deploy websites.\r\n                    It’s easier to maintain than many other tools described in this guide. With <a href=\"https://github.com/marketplace?type=actions\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub\r\n                        actions</a>, you can trigger automatic deployments, configure CI/CD, and much more.</p>\r\n                <p>Create a GitHub account if you haven’t already, then create a repository for your application.\r\n                </p>\r\n                <p>In your terminal, initialize the local directory as a Git repository, commit all the changes, and\r\n                    push it\r\n                    to remote by running the following command in the project root.</p>\r\n                <pre>git init{\"\\n\"}{\"  \"}git add .{\"\\n\"}{\"  \"}git commit -m \"initial commit\"{\"\\n\"}{\"  \"}git remote add origin .git{\"\\n\"}{\"  \"}git push -u origin master</pre>\r\n                <p>You’ll get this repository URL when you create a new repository.</p>\r\n                <p><img src=\"./docs/github-repo-url-1.png\" alt=\"GitHub Repo URL\" width={720} height={81} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>With this, your project will be pushed to GitHub.</p>\r\n                <p>In your project’s <code>package.json</code> add a <code>homepage</code> field, like this:</p>\r\n                <pre>\"homepage\": \"https://myusername.github.io/my-app\"</pre>\r\n                <p><code>myusername</code> is your GitHub username and <code>my-app</code> is your repository’s\r\n                    name.</p>\r\n                <p>Next, install <code>gh-pages</code> in your project.</p>\r\n                <pre>npm install --save gh-pages</pre>\r\n                <p>In your <code>package.json</code>, add the following scripts.</p>\r\n                <pre>\"scripts\": {\"{\"}{\"\\n\"}{\"  \"}+{\"   \"}\"predeploy\": \"npm run build\",{\"\\n\"}{\"  \"}+{\"   \"}\"deploy\": \"gh-pages -d build\",{\"\\n\"}{\"      \"}\"start\": \"react-scripts start\",{\"\\n\"}{\"      \"}\"build\": \"react-scripts build\",{\"\\n\"}{\"      \"}\"test\": \"react-scripts test\",{\"\\n\"}{\"      \"}\"eject\": \"react-scripts eject\"{\"\\n\"}{\"  \"}{\"}\"}</pre>\r\n                <p><code>predeploy</code> and <code>deploy</code> are the only additions to the scrips.\r\n                    <code>predeploy</code> will automatically run before <code>deploy</code> and make sure the\r\n                    latest build of\r\n                    the application is deployed.\r\n                </p>\r\n                <p>Run the following command to deploy the application.</p>\r\n                <pre>npm run deploy</pre>\r\n                <p>This command will create a new branch named <code>gh-pages</code> in your project’s GitHub\r\n                    repository.\r\n                    You may need to set a source under the GitHub Pages option in your repository’s settings to\r\n                    <code>gh-pages branch</code>.\r\n                </p>\r\n                <p><img src=\"./docs/github-gh-pages-branch-1.png\" alt=\"gh-pages Branch\" width={720} height={386} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GitHubPages\r\n","import React from 'react'\r\n\r\nconst GitLabPages = () => {\r\n    return (\r\n        <div>\r\n             <div>\r\n        <h2 id=\"10gitlabpages\">4. GitLab Pages</h2>\r\n        <p>You can also use <a href=\"https://docs.gitlab.com/ee/user/project/pages/\" target=\"_blank\" rel=\"noopener noreferrer\">GitLab pages</a> to publish static sites directly from the\r\n          repository in\r\n          GitLab. With GitLab pages, you can easily connect your custom domains and TLS certificates.</p>\r\n        <p>Create a <a href=\"https://gitlab.com/users/sign_up\" target=\"_blank\" rel=\"noopener noreferrer\">GitLab</a>\r\n          account if you haven’t already.</p>\r\n        <p>After creating an account, you will see the following options to add your React app.</p>\r\n        <p><img src=\"./docs/gitlab-pages.png\" alt=\"GitLab Pages\" width={720} height={323} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <p>If your project is already present on GitHub, then select <strong>Import project</strong> and\r\n          import the\r\n          project. Otherwise, select&nbsp;<strong>Create blank project</strong>&nbsp;and create an empty project.\r\n        </p>\r\n        <p>Give your project a name and click <strong>Create project</strong>.</p>\r\n        <p><img src=\"./docs/github-pages-create-project.png\" alt=\"Creating a Project in GitLab Pages\" width={720} height={453} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <p>On the next page, you’ll see various commands to add your React project, configured\r\n          according to\r\n          your credentials.</p>\r\n        <p>In your terminal, initialize the local directory as a Git repository, commit all the changes, and\r\n          push it\r\n          to remote by running the following command in the project root.</p>\r\n        <pre>git init{\"\\n\"}{\"  \"}git remote add origin <a href=\"#/cdn-cgi/l/email-protection\" className=\"__cf_email__\" data-cfemail=\"4d2a24390d2a2439212c2f632e2220\">[email&nbsp;protected]</a>:&lt;username/project-name&gt;.git{\"\\n\"}{\"  \"}git add .{\"\\n\"}{\"  \"}git commit -m \"Initial commit\"{\"\\n\"}{\"  \"}git push -u origin master{\"\\n\"}{\"  \"}</pre>\r\n        <p>Be sure to replace <code>&lt;username/project-name&gt;</code> with your username and project\r\n          name. For\r\n          example:</p>\r\n        <pre>git remote add origin <a href=\"#/cdn-cgi/l/email-protection\" className=\"__cf_email__\" data-cfemail=\"4d2a24390d2a2439212c2f632e2220\">[email&nbsp;protected]</a>:lelouchB/react-material-ui.git{\"\\n\"}{\"  \"}</pre>\r\n        <p>In your project’s <code>package.json</code>, add a <code>homepage</code> field.</p>\r\n        <pre>\"homepage\": \"https://myusername.gitlab.io/my-app\"{\"\\n\"}{\"  \"}</pre>\r\n        <p><code>myusername</code> is your username and <code>my-app</code> is the name of your project. For\r\n          example:</p>\r\n        <pre>\"homepage\":\"https://lelouchB.gitlab.io/react-material-ui/\"{\"\\n\"}{\"  \"}</pre>\r\n        <p>Create a new file named <code>.gitlab-ci.yml</code> and add the following code to it.</p>\r\n        <pre>image: node:10 # change to match your node version{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}cache:{\"\\n\"}{\"    \"}paths:{\"\\n\"}{\"      \"}- node_modules/{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}before_script:{\"\\n\"}{\"    \"}- rm -rf build{\"\\n\"}{\"    \"}- npm install{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}pages:{\"\\n\"}{\"    \"}stage: deploy{\"\\n\"}{\"    \"}script:{\"\\n\"}{\"      \"}- npm run build{\"\\n\"}{\"      \"}- rm -rf public{\"\\n\"}{\"      \"}- mv build public{\"\\n\"}{\"    \"}artifacts:{\"\\n\"}{\"      \"}paths:{\"\\n\"}{\"        \"}- public{\"\\n\"}{\"    \"}only:{\"\\n\"}{\"      \"}- master{\"\\n\"}{\"  \"}</pre>\r\n        <p>After committing this file, a pipeline will start. This will deploy your React app to GitLab\r\n          pages. You\r\n          can see this pipeline under <code>CI/CD</code> tab.</p>\r\n        <p><img  width={500} height={631} src=\"./docs/gitlab-pages-pipelines-1.png\" alt=\"GitLab Pages Pipelines\" sizes=\"(max-width: 500px) 100vw, 500px\" /></p>\r\n        <p>After the pipeline has passed successfully, it may take up to 30 minutes before the site is\r\n          available\r\n          after the first deployment, so be patient.</p>\r\n        <p>\r\n          <img width={720} height={202} src=\"./docs/gitlab-pages-pipeline-passed.png\" alt=\"GitLab Pages Pipeline Passed\" sizes=\"(max-width: 720px) 100vw, 720px\" />\r\n        </p>\r\n        <p>You can manage your React app under the <code>Settings/Pages</code> tab.</p>\r\n        <p><img src=\"./docs/gitlab-pages-manage-react-app.png\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <p>Your app will be deployed to the same URL, as mentioned in the <code>homepage</code> field in\r\n          <code>package.json</code>.\r\n        </p>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GitLabPages\r\n","import React from 'react'\r\n\r\nconst Heroku = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 id=\"herokuhttpswwwgooglecomurlsatrctjqesrcssourcewebcdcadrjauact8ved2ahukewj_sdwttbqahwfibcahdwjbo4qfjaaegqiaracurlhttps3a2f2fwwwherokucom2fusgaovvaw1v4lhsv6mb_lzj6uucuxps\">\r\n                    3. Heroku</h2>\r\n                <p><a href=\"https://www.heroku.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Heroku</a> is a cloud\r\n                    application platform that has attracted a large number of developers since its launch in 2007.\r\n                    One reason\r\n                    for this is that it supports most programming languages, including the likes of Go, Node.js,\r\n                    Clojure, and\r\n                    more.</p>\r\n                <h3 id=\"herokucli\">Heroku CLI</h3>\r\n                <p>Like most of the other services we’ve discussed thus far, start by creating a free account\r\n                    on <a href=\"https://signup.heroku.com/\">Heroku</a>.</p>\r\n                <p>Install <code>heroku-cli</code> globally by running the following command.</p>\r\n                <pre>npm install -g heroku</pre>\r\n                <p>You can read about other installation methods in the <a href=\"https://devcenter.heroku.com/articles/heroku-cli\" target=\"_blank\" rel=\"noopener noreferrer\">official docs</a>.</p>\r\n                <p>Log into <code>heroku-cli</code>.</p>\r\n                <pre>heroku login</pre>\r\n                <p>You’ll be prompted to log into your account in the browser. Click “Log In.”</p>\r\n                <p><img src=\"./docs/heroku-cli-login-1-e1596674941616.png\" alt=\"Heroku CLI Login\" width={400} height={330} /></p>\r\n                <p>We’ll use <a href=\"https://github.com/mars/create-react-app-buildpack#user-content-create-the-heroku-app\" target=\"_blank\" rel=\"noopener noreferrer\">Heroku Buildpack for create-react-app</a> for\r\n                    quick\r\n                    deployment. Below is all the code you’ll need; you can copy/paste and deploy in one step.\r\n                </p>\r\n                <pre>git init{\"\\n\"}{\"  \"}heroku create -b https://github.com/mars/create-react-app-buildpack.git{\"\\n\"}{\"  \"}git add .{\"\\n\"}{\"  \"}git commit -m \"react-create-app on Heroku\"{\"\\n\"}{\"  \"}git push heroku master{\"\\n\"}{\"  \"}heroku open</pre>\r\n                <p>This might be the <a href=\"https://blog.heroku.com/deploying-react-with-zero-configuration\" target=\"_blank\" rel=\"noopener noreferrer\">fastest way to deploy via terminal</a> because\r\n                    yiuy don’t have\r\n                    to answer any prompts as with other CLIs.</p>\r\n                <h3 id=\"herokudashboard\">Heroku dashboard</h3>\r\n                <p>You can aso deploy with Heroku via the dashboard.</p>\r\n                <p>Make sure your project is stored in a GitHub repository.</p>\r\n                <p>Go to your <a href=\"https://blog.heroku.com/deploying-react-with-zero-configuration\" target=\"_blank\" rel=\"noopener noreferrer\">Heroku dashboard</a>, click “New,” and\r\n                    then click “Create\r\n                    new app.”</p>\r\n                <p><img src=\"./docs/heroku-dashboard-create-new-app-1.png\" alt=\"Heroku Dashboard — Create New App\" width={720} height={85} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>You’ll be prompted to give your project a name. Type your application name and click\r\n                    “Create\r\n                    app.”</p>\r\n                <p><img src=\"./docs/heroku-cli-app-name-1.png\" alt=\"Heroku CLI — Name App\" width={720} height={354} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>After creating an app, sync your GitHub repository. You’ll see something like this on your\r\n                    app\r\n                    dashboard.</p>\r\n                <p><img width={720} height={76} src=\"./docs/heroku-deployment-method-1.png\" alt=\"Heroku Deployment Method\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>Once you’ve successfully connected your GitHub to Heroku, you can search for the project\r\n                    repository\r\n                    and deploy it.</p>\r\n                <p>Select your project from the list of repositories.</p>\r\n                <p><img width={720} height={155} src=\"./docs/heroku-connect-to-github-1.png\" alt=\"Heroku — Connect to GitHub\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>You’ll have two choices: manual deploy or automatic deploy. For the purpose of this\r\n                    tutorial,\r\n                    we’ll go with manual deploy.</p>\r\n                <p>Click “Deploy Branch” under “Manual Deploy” and your application will be\r\n                    deployed\r\n                    once the build process completes.</p>\r\n                <p><img src=\"./docs/heroku-manual-deploy-1.png\" alt=\"Heroku Manual Deploy\" width={720} height={133} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heroku\r\n","import React from 'react'\r\n\r\nconst Surge = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 id=\"surgehttpssurgesh\">5. Surge</h2>\r\n                <p><a href=\"https://surge.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">Surge</a> is one of the\r\n                    fastest\r\n                    ways to deploy frontend projects. Compared to other CLIs, it requires much less configuration,\r\n                    and you can\r\n                    create a Surge account directly from the terminal when using it for the first time.</p>\r\n                <p>To deploy the latest build of the project, run the following command in the project root\r\n                    directory.</p>\r\n                <pre>npm run build</pre>\r\n                <p>To install Surge CLI globally:</p>\r\n                <pre>npm install -g surge</pre>\r\n                <p>Run <code>surge</code> inside the <code>build</code> folder.</p>\r\n                <pre>cd build{\"\\n\"}{\"  \"}surge</pre>\r\n                <p>Follow the prompts. First, you’ll be asked for an email and password.</p>\r\n                <pre>Welcome to surge! (surge.sh){\"\\n\"}{\"  \"}Login (or create surge account) by entering email &amp; password.</pre>\r\n                <pre>{\"      \"}email: <a href=\"#/cdn-cgi/l/email-protection\" className=\"__cf_email__\" data-cfemail=\"93f2f7fefafdd3f2e0fbe6e0fafdf4fbbdfef6\">[email&nbsp;protected]</a>{\"\\n\"}{\"        \"}password:{\"\\n\"}{\"  \"}</pre>\r\n                <p>Before filling in any other prompts, it’s a good idea to confirm your Surge account.</p>\r\n                <p><img  width={720} height={225} src=\"./docs/surge-email-verification-1.png\" alt=\"Surge Email Verification\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>In the terminal, you’ll be asked to confirm your project directory. Hit enter.</p>\r\n                <p>You’ll see the domain of your project. Again, hit enter.</p>\r\n                <pre>{\"    \"}project: D:\\code\\react-example-deploy\\build\\{\"\\n\"}{\"      \"}domain: tremendous-person.surge.sh {\"\\n\"}{\"  \"}</pre>\r\n                <p>This will publish your application.</p>\r\n                <pre>{\"   \"}Success! - Published to outstanding-scent.surge.sh{\"\\n\"}{\"  \"}</pre>\r\n                <p>You might want to rename <code>index.html</code> to <code>200.html</code> in your\r\n                    <code>build</code>\r\n                    folder before surging to support the HTML5 <a href=\"https://surge.sh/help/adding-a-200-page-for-client-side-routing\" target=\"_blank\" rel=\"noopener noreferrer\"><code>pushState API</code></a>.\r\n                </p>\r\n                <p>If you run into an aborted error, try to <a href=\"https://github.com/sintaxi/surge/issues/55\" target=\"_blank\" rel=\"noopener noreferrer\">run the <code>surge</code> command again</a>.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Surge\r\n","import React from 'react'\r\n\r\nconst Render = () => {\r\n    return (\r\n        <div>\r\n             <div>\r\n        <h2 id=\"renderhttpsrendercom\">6. Render</h2>\r\n        <p><a href=\"https://render.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Render</a>, the winner of\r\n          Startup\r\n          Battlefield at <a href=\"https://github.com/sintaxi/surge/issues/55\" target=\"_blank\" rel=\"noopener noreferrer\">Disrupt SF 2019</a>, founded in 2018, is a new and rising cloud\r\n          platform.</p>\r\n        <p>While hosting sites on Render is free, you need to <a href=\"https://render.com/pricing\" target=\"_blank\" rel=\"noopener noreferrer\">pay for other services</a> such as databases, cron\r\n          jobs, Docker containers,\r\n          etc. Both Heroku and Render classify as platform-as-a-service.</p>\r\n        <p>Before you deploy, make sure your project is stored in a GitHub repository.</p>\r\n        <p>Create an account on <a href=\"https://dashboard.render.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Render</a>.</p>\r\n        <p>Next, click “New Web Service” on the dashboard.</p>\r\n        <p><img src=\"./docs/render-new-web-service-1.png\" alt=\"Create New Web Service in Render\" width={720} height={449} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <p>If this is your first time using Render, you’ll need to connect your GitHub or GitLab,\r\n          wherever\r\n          your repository is stored.</p>\r\n        <p><img src=\"./docs/render-new-web-service-prompt-1.png\" alt=\"Create New Web Service in Render\" width={720} height={46} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <p>Once connected, search for your project repository and select it. After this, you’ll need\r\n          to give\r\n          your web service a unique name. Render will auto-detect if your application is bootstrapped with\r\n          <code>create-react-app</code> and fill the configuration accordingly.\r\n        </p>\r\n        <p><img service details in  width={720} height={475} src=\"./docs/render-web-service-details-1.png\" alt=\"Web Service Details in Render\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <p>Click “Create Web Service,” after which your project will be deployed.</p>\r\n        <p><img src=\"./docs/render-deployment-1.png\" alt=\"Render Deployment\" width={720} height={432} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <h3>Client-side routing</h3>\r\n        <p>If your project uses something like React router, you’ll need to redirect all routing\r\n          requests to\r\n          <code>index.html</code>. Go to the “Redirects/Rewrites” tab for your service, add a\r\n          rule, and\r\n          save the changes.\r\n        </p>\r\n        <p><img  routing in  width={720} height={237} src=\"./docs/render-client-side-routing-1.png\" alt=\"Client-Side Routing in Render\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Render\r\n","import React from 'react'\r\n\r\nconst Roast = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n        <h2 id=\"roasthttpswwwroastio\">7. Roast</h2>\r\n        <p><a href=\"https://www.roast.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Roast</a> is another\r\n          web\r\n          hosting platform that you can use to deploy single-page applications (SPAs).</p>\r\n        <p>It’s very simple to configure and use. The <a href=\"https://www.roast.io/docs\" target=\"_blank\" rel=\"noopener noreferrer\">Roast docs</a> are clear and concise.</p>\r\n        <p>Start by creating a Roast account.</p>\r\n        <p><img src=\"./docs/roast-sign-up-1-e1596725872934.png\" alt=\"Roast Sign-Up\" width={400} height={563} /></p>\r\n        <p>Install Roast CLI globally.</p>\r\n        <pre>npm install -g roast</pre>\r\n        <p>To deploy the latest build, run the following command in your project directory.</p>\r\n        <pre>npm run build</pre>\r\n        <p>Run the following command to deploy with Roast.</p>\r\n        <pre>roast deploy</pre>\r\n        <p>After this, you’ll be authenticated.</p>\r\n        <p><img src=\"./docs/roast-authentication-1.png\" alt=\"Roast Authentication\" width={720} height={202} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <p>In the terminal, you’ll be asked to create a new site. Answer <code>Yes</code>. Then,\r\n          you’ll\r\n          be asked for <code>Path to deploy</code>, which will be the <code>build</code> folder.</p>\r\n        <pre>? No site ID specified, create a new site Yes ? Path to deploy? build</pre>\r\n        <p>Your application is now deployed.</p>\r\n        <pre>� Roasting deploy from folder D:\\code\\react-example-deploy\\build{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}☕ Deploy roasted!{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}✨ https://witty-surprise-3068.roast.io</pre>\r\n        <p>To return <code>index.html</code> instead of a 404, create a <code>_redirects</code> file inside\r\n          <code>build</code> with the following code.\r\n        </p>\r\n        <pre>/* /index.html 200{\"\\n\"}{\"  \"}</pre>\r\n        <p>Once you’ve added this file, you’ll need to redeploy your app with\r\n          <code>roast deploy</code>.\r\n        </p>\r\n        <p>You can now see this <a href=\"https://www.roast.io/docs/config/redirects\" target=\"_blank\" rel=\"noopener noreferrer\">redirect</a> in your Roast dashboard.</p>\r\n        <p><img in  width={720} height={142} src=\"./docs/roast-deploy-redirects-1.png\" alt=\"Deploy Redirects in Roast\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Roast\r\n","import React from 'react'\r\n\r\nconst Firebase = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n        <h2 id=\"firebasehttpswwwgooglecomurlsatrctjqesrcssourcewebcdcadrjauact8ved2ahukewilbymy87qahxkjoykhzkpap0qfjaaegqiaracurlhttps3a2f2ffirebasegooglecom2fusgaovvaw3fzcjfkgyyxdupcds8vwfg\">\r\n          8. Firebase</h2>\r\n        <p><a href=\"https://firebase.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Firebase</a> is\r\n          an\r\n          entire platform that you can use to develop and scale your application. Along with hosting, it\r\n          offers <a href=\"https://firebase.google.com/products\" target=\"_blank\" rel=\"noopener noreferrer\">myriad other\r\n            services</a>, including authentication, Cloud Firestore, cloud functions, and more.</p>\r\n        <p>If you haven’t already, create an account on <a href=\"https://firebase.google.com/products\" target=\"_blank\" rel=\"noopener noreferrer\">Firebase</a> and then create a new project.</p>\r\n        <p><img width={720} height={336} src=\"./docs/firebase-create-new-project-1.png\" alt=\"Create New Project in Firebase\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n        <p>Install Firebase CLI globally. Having it installed globally makes it easier to use in different\r\n          projects.\r\n        </p>\r\n        <pre>npm install -g firebase-tools</pre>\r\n        <p>Login with your Firebase/Google account.</p>\r\n        <pre>firebase login</pre>\r\n        <p>You’ll be prompted with a URL in the terminal that will open in the browser to verify.\r\n          After giving\r\n          the necessary permissions, you’ll see a successful login message.</p>\r\n        <p>\r\n          <img src=\"./docs/firebase-cli-login-successful-1-e1596675731380.png\" width={400} height={187} alt=\"\" />\r\n          </p>\r\n        <p>Next, go to your project root directory and run the following command to initialize a Firebase\r\n          project.\r\n        </p>\r\n        <pre>firebase init</pre>\r\n        <p>You’ll be asked to confirm. Reply <code>Yes</code>.</p>\r\n        <pre> ? Are you ready to proceed? Yes{\"\\n\"}{\"  \"}</pre>\r\n        <p>Choose the hosting option.</p>\r\n        <pre>? Which Firebase CLI features do you want to setup for this folder? Press Space to select features, then Enter to confirm your choices.{\"\\n\"}{\"   \"}◯ Database: Deploy Firebase Realtime Database Rules{\"\\n\"}{\"   \"}◯ Firestore: Deploy rules and create indexes for Firestore{\"\\n\"}{\"   \"}◯ Functions: Configure and deploy Cloud Functions{\"\\n\"}{\"  \"}❯◯ Hosting: Configure and deploy Firebase Hosting sites{\"\\n\"}{\"   \"}◯ Storage: Deploy Cloud Storage security rules{\"\\n\"}{\"  \"}</pre>\r\n        <p>When asked to choose the Firebase project associated with your application, since you already\r\n          created a\r\n          project in the first step, choose <code>Use an existing project</code>. Otherwise, you can\r\n          select\r\n          <code>Create a new project</code>.\r\n        </p>\r\n        <pre>=== Project Setup{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}First, let's associate this project directory with a Firebase project.{\"\\n\"}{\"  \"}You can create multiple project aliases by running firebase use --add,{\"\\n\"}{\"  \"}but for now we'll just set up a default project.{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}? Please select an option: (Use arrow keys){\"\\n\"}{\"  \"}&gt; Use an existing project{\"\\n\"}{\"    \"}Create a new project{\"\\n\"}{\"    \"}Add Firebase to an existing Google Cloud Platform project{\"\\n\"}{\"    \"}Don't set up a default project{\"\\n\"}{\"  \"}</pre>\r\n        <p>If you choose to <code>Create a new project</code>, you’ll be asked to provide a unique\r\n          project ID.\r\n        </p>\r\n        <p>Lastly, change the default <code>public</code> folder to <code>build</code> for your\r\n          <code>create-react-app</code> project. If you’ve not initialized the project with\r\n          <code>create-react-app</code>, choose the appropriate build folder.\r\n        </p>\r\n        <pre>=== Hosting Setup{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}Your public directory is the folder (relative to your project directory) that{\"\\n\"}{\"  \"}will contain Hosting assets to be uploaded with firebase deploy. If you{\"\\n\"}{\"  \"}have a build process for your assets, use your build's output directory.{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}? What do you want to use as your public directory? build{\"\\n\"}{\"  \"}? Configure as a single-page app (rewrite all urls to /index.html)? Yes{\"\\n\"}{\"  \"}</pre>\r\n        <p>If you’ve already built the project, you’ll be asked whether to overwrite or not.\r\n          Answer\r\n          <code>No</code>.\r\n        </p>\r\n        <pre>? File public/index.html already exists. Overwrite? No{\"\\n\"}{\"  \"}</pre>\r\n        <p>With this, <code>firebase init</code> is complete.</p>\r\n        <p>Before proceeding to the next step, build your React project.</p>\r\n        <pre> npm run build{\"\\n\"}{\"  \"}</pre>\r\n        <p>The next and final step is to deploy the project. Run the following command.</p>\r\n        <pre>firebase deploy</pre>\r\n        <p>Once the process completes, you’ll see the deployed links in the terminal.</p>\r\n        <pre>+{\"  \"}Deploy complete!{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}Project Console: https://console.firebase.google.com/project/react-project/overview{\"\\n\"}{\"  \"}Hosting URL: https://react-project.web.app{\"\\n\"}{\"  \"}</pre>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Firebase\r\n","import React from 'react'\r\n\r\nconst MoovwebXDN = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 id=\"9moovwebxdn\">9. Moovweb XDN</h2>\r\n                <p><a href=\"https://developer.moovweb.com/guides/overview\" target=\"_blank\" rel=\"noopener noreferrer\">Moovweb\r\n                    XDN</a>&nbsp;is an all-in-one platform to develop, deploy, preview, experiment on, monitor, and\r\n                    run your\r\n                    application.</p>\r\n                <p><a href=\"https://www.moovweb.com/pricing\">Moovweb’s free tier</a> should be more than sufficient\r\n                    for your\r\n                    side projects.</p>\r\n                <p>Start by creating a <a href=\"https://moovweb.app/signup\">Moovweb XDN account</a>.</p>\r\n                data-lazy-sizes=\"(max-width: 720px) 100vw, 720px\"\r\n                data-lazy-src=\"#/wp-content/uploads/2020/08/moovweb-xdn.png?is-pending-load=1\"\r\n                sizes=\"(max-width: 720px) 100vw, 720px\" /&gt;<p />\r\n                <p>XDN only supports Node.js version 12 and higher.</p>\r\n                <p>Check your Node version by running the following command.</p>\r\n                <pre>node --version{\"\\n\"}{\"  \"}</pre>\r\n                <p>Install XDN CLI globally.</p>\r\n                <pre>npm i -g @xdn/cli{\"\\n\"}{\"  \"}</pre>\r\n                <p>After installing the XDN CLI, run the following command to authenticate yourself.</p>\r\n                <pre>xdn login{\"\\n\"}{\"  \"}</pre>\r\n                <p>You’ll see the following output in the terminal.</p>\r\n                <pre>Authenticating user!{\"\\n\"}{\"  \"}</pre>\r\n                <p>After this, You will be redirected to the Moovweb page and see the following message.</p>\r\n                <p><img src=\"./docs/moovweb-sign-in.png\" alt=\"Moovweb Sign In\" width={720} height={300} sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\r\n                <p>To deploy the latest build, run the following command in your project directory.</p>\r\n                <pre>npm run build{\"\\n\"}{\"  \"}</pre>\r\n                <p>In your project’s root directory, run the following command in the terminal.</p>\r\n                <pre>xdn init{\"\\n\"}{\"  \"}</pre>\r\n                <p>This command will install all the dependencies and files required by XDN in your project. After a\r\n                    few\r\n                    minutes, you will see the following message in your terminal.</p>\r\n                <pre>✔ installing @xdn/core, @xdn/cli, @xdn/prefetch, @xdn/devtools... done.{\"\\n\"}{\"  \"}&gt; routes.js not found, creating...{\"\\n\"}{\"  \"}&gt; xdn.config.js not found, creating...{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}Added the following scripts:{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}xdn - Run xdn commands using the local version of the XDN CLI.{\"\\n\"}{\"  \"}xdn:start - Simulate your app on the XDN locally.{\"\\n\"}{\"  \"}xdn:build - Build your app for deployment on the XDN.{\"\\n\"}{\"  \"}xdn:deploy - Build and deploy your app on the XDN.{\"\\n\"}{\"  \"}{\"\\n\"}{\"  \"}🎉 Your app is now ready to deploy on the MOOVWEB XDN!{\"\\n\"}{\"  \"}</pre>\r\n                <p>You’ll notice some new files will be created after the <code>xdn init</code> command.\r\n                    Modify\r\n                    <code>routes.js</code> in the root like this to serve the <code>build</code> directory.\r\n                </p>\r\n                <pre>// routes.js{\"\\n\"}{\"  \"}const {\"{\"} Router {\"}\"} = require('@xdn/core/router'){\"\\n\"}{\"  \"}const ONE_HOUR = 60 * 60{\"\\n\"}{\"  \"}const ONE_DAY = 24 * ONE_HOUR{\"\\n\"}{\"  \"}const ONE_YEAR = 365 * ONE_DAY{\"\\n\"}{\"  \"}const edgeOnly = {\"{\"}{\"\\n\"}{\"    \"}browser: false,{\"\\n\"}{\"    \"}edge: {\"{\"} maxAgeSeconds: ONE_YEAR {\"}\"},{\"\\n\"}{\"  \"}{\"}\"}{\"\\n\"}{\"  \"}const edgeAndBrowser = {\"{\"}{\"\\n\"}{\"    \"}browser: {\"{\"} maxAgeSeconds: ONE_YEAR {\"}\"},{\"\\n\"}{\"    \"}edge: {\"{\"} maxAgeSeconds: ONE_YEAR {\"}\"},{\"\\n\"}{\"  \"}{\"}\"}{\"\\n\"}{\"  \"}module.exports = new Router(){\"\\n\"}{\"    \"}.prerender([{\"{\"} path: '/' {\"}\"}]){\"\\n\"}{\"    \"}// js and css assets are hashed and can be far-future cached in the browser{\"\\n\"}{\"    \"}.get('/static/:path*', ({\"{\"} cache, serveStatic {\"}\"}) =&gt; {\"{\"}{\"\\n\"}{\"      \"}cache(edgeAndBrowser){\"\\n\"}{\"      \"}serveStatic('build/static/:path*'){\"\\n\"}{\"    \"}{\"}\"}){\"\\n\"}{\"    \"}// all paths that do not have a \".\" as well as \"/\"\" should serve the app shell (index.html){\"\\n\"}{\"    \"}.get('/:path*/:file([^\\\\.]+|)', ({\"{\"} cache, appShell {\"}\"}) =&gt; {\"{\"}{\"\\n\"}{\"      \"}cache(edgeOnly){\"\\n\"}{\"      \"}appShell('build/index.html'){\"\\n\"}{\"    \"}{\"}\"}){\"\\n\"}{\"    \"}// all other paths should be served from the build directory{\"\\n\"}{\"    \"}.get('/:path*', ({\"{\"} cache, serveStatic {\"}\"}) =&gt; {\"{\"}{\"\\n\"}{\"      \"}cache(edgeOnly){\"\\n\"}{\"      \"}serveStatic('build/:path*'){\"\\n\"}{\"    \"}{\"}\"}){\"\\n\"}{\"  \"}</pre>\r\n                <p>To <a href=\"https://developer.moovweb.com/guides/react#section_create_react_app_example\" target=\"_blank\" rel=\"noopener noreferrer\">deploy your React app</a>, run the following\r\n                    command.</p>\r\n                <pre>xdn deploy{\"\\n\"}{\"  \"}</pre>\r\n                <p>After a few minutes, your site will be deployed.</p>\r\n                <p>You can read more about <a href=\"https://developer.moovweb.com/guides/react\" target=\"_blank\" rel=\"noopener noreferrer\">deploying a React app with Moovweb XDN</a>.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoovwebXDN\r\n","import React from 'react'\r\n\r\nconst Extra = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 id=\"hereareafewotherplatformsworthcheckingout\">Some other platforms worth checking out</h2>\r\n                <ul>\r\n                    <li><a href=\"https://www.digitalocean.com/products/app-platform/\" target=\"_blank\" rel=\"noopener noreferrer\">DigitalOcean App Platform</a> — You can deploy three static\r\n                        sites on Starter\r\n                        or the free tier</li>\r\n                    <li><a href=\"https://www.stormkit.io/\" target=\"_blank\" rel=\"noopener noreferrer\">StormKit</a> —\r\n                        Single app\r\n                        deployment is available on the free tier</li>\r\n                    <li><a href=\"https://platform.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">Platform.sh</a> —\r\n                        Offers a\r\n                        30-day free trial</li>\r\n                    <li><a href=\"https://bip.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">Bip</a> — Offers a\r\n                        seven-day free\r\n                        trial</li>\r\n                </ul>\r\n                <h2 id=\"conclusion\">Conclusion</h2>\r\n                <p>Now that we’ve discussed ten different ways to deploy React, you should try out as many as\r\n                    you can\r\n                    to determine which best aligns with your deployment requirements. After all, they’re free\r\n                    to use.\r\n                </p>\r\n                <p>For a good next step, try to add custom domains to your deployed application. It’s good to\r\n                    have a\r\n                    distinctive domain for projects, which have different ways to add a custom domain — some easy,\r\n                    some\r\n                    relatively complex.</p>\r\n                <p>Happy coding!</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Extra\r\n","import './App.css';\nimport Vercel from './components/Vercel';\nimport Netlify from './components/Netlify';\nimport GitHubPages from './components/GitHubPages';\nimport GitLabPages from './components/GitLabPages';\nimport Heroku from './components/Heroku';\nimport Surge from './components/Surge';\nimport Render from './components/Render';\nimport Roast from './components/Roast';\nimport Firebase from './components/Firebase';\nimport MoovwebXDN from './components/MoovwebXDN';\nimport Extra from './components/Extra';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 mx-auto\" id=\"post-22942\">\n        <div className=\"mainheading\">\n          <h1 className=\"posttitle\">10 ways to deploy a React app for free</h1>\n          <h2 className=\"post-subtitle\" />\n          <p>\n            <span className=\"post-date\"><time className=\"post-date\">\n                October 21, 2021 </time></span>\n            <span className=\"dot\" />\n            <span className=\"readingtime\">14 min read</span>\n          </p>\n        </div>\n        <img width={730} height={487} src=\"./docs/8-ways-to-deploy-react-apps.png\" />\n\n        <article className=\"article-post my-3\">\n          <Netlify />\n          <GitHubPages />\n          <Heroku />\n          <GitLabPages />\n          <Surge />\n          <Render />\n          <Roast />\n          <Firebase />\n          <MoovwebXDN />\n          <Vercel />\n          <Extra />\n        </article>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}